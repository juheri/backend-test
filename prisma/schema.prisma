generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_STRING")
}

model users {
  id                Int           @id @default(autoincrement())
  position          String?       @db.VarChar(255)
  name              String?       @db.VarChar(255)
  password          String        @db.VarChar(255)
  ktp_number        String?       @db.VarChar(255)
  birthday          String?       @db.VarChar(255)
  gender            users_gender?
  religion          String?       @db.VarChar(255)
  blood_type        String?       @db.VarChar(5)
  status            String?       @db.VarChar(255)
  ktp_address       String?       @db.Text
  address           String?       @db.Text
  email             String        @unique(map: "email") @db.VarChar(255)
  phone             String?       @db.VarChar(255)
  closest_person    String?       @db.VarChar(255)
  skill             String?       @db.Text
  is_out_assignment Boolean?
  expected_sallary  Int?
  signature_date    DateTime?     @db.Date
  created_at        DateTime      @default(now()) @db.DateTime(0)
  updated_at        DateTime      @default(now()) @db.DateTime(0)

  courses                 courses[]
  educations              educations[]
  employment_histories    employment_histories[]
}

model admins {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(255)
  email      String   @unique(map: "email") @db.VarChar(255)
  password   String   @db.VarChar(255)
  created_at DateTime @default(now()) @db.DateTime(0)
  updated_at DateTime @default(now()) @db.DateTime(0)
}

model courses {
  id             Int      @id @default(autoincrement())
  user_id        Int
  name           String   @db.VarChar(255)
  is_certificate Boolean
  year           Int
  craeted_at     DateTime @default(now()) @db.DateTime(0)
  updated_at     DateTime @default(now()) @db.DateTime(0)

  user           users?   @relation(fields: [user_id], references: [id])
}

model educations {
  id              Int      @id @default(autoincrement())
  user_id         Int
  last_education  String   @db.VarChar(255)
  academic_name   String   @db.VarChar(255)
  major           String   @db.VarChar(255)
  graduation_year Int
  ipk             String   @db.VarChar(25)
  created_at      DateTime @default(now()) @db.DateTime(0)
  updated_at      DateTime @default(now()) @db.DateTime(0)

  user           users?   @relation(fields: [user_id], references: [id])
}

model employment_histories {
  id            Int      @id @default(autoincrement())
  user_id       Int
  company_name  String   @db.VarChar(255)
  last_position String   @db.VarChar(255)
  last_salary   Int
  year          Int
  created_at    DateTime @default(now()) @db.DateTime(0)
  updated_at    DateTime @default(now()) @db.DateTime(0)

  user           users?   @relation(fields: [user_id], references: [id])
}

enum users_gender {
  male
  female
}
